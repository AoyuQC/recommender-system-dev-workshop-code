AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    (SO8010)

    CloudFormation for RecSys StepFuncs


Parameters:
  Stage:
    Type: String
    Default: dev

  StepFuncAndLambdaRoleName:
    Type: String
    Default: LambdaAndStepFuncsRole

  SagemakerRoleName:
    Type: String
    Default: SMRole

  S3UtilLabmda:
    Type: String
    Default: S3UtilLabmda

  PreCheckLabmda:
    Type: String
    Default: PreCheckLabmda

  SNSMessageLambda:
    Type: String
    Default: SNSMessageLambda



Resources:
  TrainModelStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/rs-${Stage}-${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: !Sub rs-${Stage}-News-TrainModelStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "User processing",
          "TimeoutSeconds": 36000,
          "States": {
            "User processing": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-UserPreprocessingStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.UserProcessing",
              "Next": "Add item user batch"
            },
            "Add item user batch": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-AddItemUserBatchStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.AddItemUserBatch",
              "Next": "Action processing"
            },
            "Action processing": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-ActionPreprocessingStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.ActionProcessing",
              "Next": "Model update (embedding)"
            },
            "Model update (embedding)": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-ModelUpdateEmbeddingStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.ModelUpdateEmbedding",
              "Next": "Model update (action)"
            },
            "Model update (action)": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-ModelUpdateActionStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "Next": "Send notification",
              "ResultPath": "$.ModelUpdateAction"
            },
            "Send notification": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "rs-${Stage}-${SNSMessageLambda}",
                "Payload": {
                  "file_type": "train-model",
                  "message_type": "news",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                }
              },
              "ResultSelector": {
                "Payload.$": "$.Payload"
              },
              "Next": "Succeed",
              "ResultPath": "$.Notification"
            },
            "Succeed": {
              "Type": "Succeed"
            }
          }
        }

