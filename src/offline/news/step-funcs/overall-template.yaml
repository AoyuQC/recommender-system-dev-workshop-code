AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  (SO8010)

  CloudFormation for RecSys StepFuncs


Parameters:
  Stage:
    Type: String
    Default: dev

  StepFuncAndLambdaRoleName:
    Type: String
    Default: LambdaAndStepFuncsRole

  SagemakerRoleName:
    Type: String
    Default: SMRole

  S3UtilLabmda:
    Type: String
    Default: S3UtilLabmda

  PreCheckLabmda:
    Type: String
    Default: PreCheckLabmda

  SNSMessageLambda:
    Type: String
    Default: SNSMessageLambda


Resources:
  OverallStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/rs-${Stage}-${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: !Sub rs-${Stage}-News-OverallStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "Detect change type",
          "TimeoutSeconds": 36000,
          "States": {
            "Detect change type": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.change_type",
                  "IsPresent": false,
                  "Next": "Action new"
                },
                {
                  "Variable": "$.change_type",
                  "StringEquals": "ACTION",
                  "Next": "Action new"
                },
                {
                  "Variable": "$.change_type",
                  "StringEquals": "CONTENT",
                  "Next": "Content new"
                },
                {
                  "Variable": "$.change_type",
                  "StringEquals": "CONTENT_ASS",
                  "Next": "Content new(assembled)"
                },
                {
                  "Variable": "$.change_type",
                  "StringEquals": "MODEL",
                  "Next": "Train model"
                },
                {
                  "Variable": "$.change_type",
                  "StringEquals": "ACTION_MODEL",
                  "Next": "Train action model"
                }
              ],
              "Default": "Action new"
            },
            "Action new": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-ActionNewStepFunc",
                "Name.$": "States.Format('oa{}', $$.Execution.Name)"
              },
              "End": true
            },
            "Content new": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-ItemNewStepFunc",
                "Name.$": "States.Format('oc{}', $$.Execution.Name)"
              },
              "End": true
            },
            "Content new(assembled)": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-AssIteNewStepFunc",
                "Name.$": "States.Format('oc{}', $$.Execution.Name)"
              },
              "End": true
            },
            "Train model": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-TrainModelStepFunc",
                "Name.$": "States.Format('ot{}', $$.Execution.Name)"
              },
              "End": true
            },
            "Train action model": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-News-TrainActionModelStepFunc",
                "Name.$": "States.Format('ota{}', $$.Execution.Name)"
              },
              "End": true
            }
          }
        }
