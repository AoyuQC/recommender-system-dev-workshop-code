AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  (SO8010)

  CloudFormation for RecSys StepFuncs


Parameters:
  Stage:
    Type: String
    Default: dev
    
  StepFuncAndLambdaRoleName:
    Type: String
    Default: LambdaAndStepFuncsRole

  SagemakerRoleName:
    Type: String
    Default: SMRole

  S3UtilLabmda:
    Type: String
    Default: S3UtilLabmda

  PreCheckLabmda:
    Type: String
    Default: PreCheckLabmda

  SNSMessageLambda:
    Type: String
    Default: SNSMessageLambda

Resources:
  ItemNewStepFunc:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/rs-${Stage}-${StepFuncAndLambdaRoleName}-${AWS::Region}"
      StateMachineName: !Sub rs-${Stage}-Movie-ItemNewStepFunc
      DefinitionString: !Sub |
        {
          "StartAt": "Item data processing",
          "TimeoutSeconds": 36000,
          "States": {
            "Item data processing": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-Movie-ItemPreProcessingStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.ItemPreProcessing",
              "Next": "Action processing"
            },
            "Action processing": {
               "Type": "Task",
               "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
               "Parameters": {
                 "Input": {
                   "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                   "Bucket.$": "$.Bucket",
                   "S3Prefix.$": "$.S3Prefix"
                 },
                 "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-Movie-ActionPreProcessingStepFunc",
                 "Name.$": "States.Format('{}', $$.Execution.Name)"
               },
               "ResultPath": "$.ActionProcessing",
               "Next": "Inverted list"
             },
            "Inverted list": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-Movie-InvertedListStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.InvertedList",
              "Next": "Add item user batch"
            },
            "Add item user batch": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-Movie-AddItemUserBatchStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.AddItemUserBatch",
              "Next": "Model update ub"
            },
            "Model update ub": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-Movie-ModelUpdateUbStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "ResultPath": "$.ModelUpdateUb",
              "Next": "Item feature update batch"
            },
            "Item feature update batch": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-Movie-ItemFeatureUpdateBatchStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "Next": "Model update deepfm",
              "ResultPath": "$.ItemFeatureUpdateBatch"
            },
            "Model update deepfm": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::states:startExecution.sync:2",
              "Parameters": {
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                },
                "StateMachineArn": "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:rs-${Stage}-Movie-ModelUpdateDeepfmStepFunc",
                "Name.$": "States.Format('{}', $$.Execution.Name)"
              },
              "Next": "Send notification",
              "ResultPath": "$.ModelUpdateDeepfm"
            },
            "Send notification": {
              "Type": "Task",
              "Resource": "arn:${AWS::Partition}:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "rs-${Stage}-${SNSMessageLambda}",
                "Payload": {
                  "file_type": "item-new",
                  "message_type": "movie",
                  "Bucket.$": "$.Bucket",
                  "S3Prefix.$": "$.S3Prefix"
                }
              },
              "ResultSelector": {
                "Payload.$": "$.Payload"
              },
              "Next": "Succeed",
              "ResultPath": "$.Notification"
            },
            "Succeed": {
              "Type": "Succeed"
            }
          }
        }


